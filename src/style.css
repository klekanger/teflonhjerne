* {
  margin: 0;
  padding: 0;
  font-family: 'Bangers', cursive;
  font-family: 'Open Sans', sans-serif;
}

/* 
    Define some CSS custom properties for colors, spacing, font sizes etc.
*/
:root {
  --font-title: 'Bangers', cursive;
  --shadow-default: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -2px rgba(0, 0, 0, 0.1);
  --shadow-button: rgba(50, 50, 93, 0.1) 0 0 0 1px inset,
    rgba(50, 50, 93, 0.1) 0 2px 5px 0, rgba(0, 0, 0, 0.07) 0 1px 1px 0;
  --rounded-large: 12px;
  --rounded-standard: 6px;
  --rounded-small: 4px;
  --color-button-standard: #ae357e;
  --color-button-standard-hover: #c45c28;
  --color-title-standard: #868686;
  --color-title-dark: #5e5e5e;
  --color-tile-background: #ddd;
  --color-tile-hover: #eee;
}
.title {
  font-family: var(--font-title);
  color: var(--color-title-standard);
  letter-spacing: 0.025em;
  text-align: center;
  font-size: 3em;
  padding-top: 2rem;
  user-select: none;
}

.score-display {
  font-family: var(--font-title);
  align-self: flex-end;
  font-size: xx-large;
  user-select: none;
}

.footer {
  font-size: small;
  text-align: center;
  padding-top: 1rem;
  color: #888;
}

a {
  text-decoration: none;
  color: #888;
  cursor: pointer;
}

#tries {
  font-family: inherit;
}

.btn-standard {
  padding: 10px;
  margin: auto;
  background-color: var(--color-button-standard);
  border-radius: var(--rounded-standard);
  border-width: 0;
  cursor: pointer;
  font-size: 1em;
  height: 44px;
  line-height: 1.15;
  margin: 12px 0 0;
  color: #fff;
  padding: 0 25px;
  text-align: center;
  box-shadow: var(--shadow-button);
  user-select: none;
}

.btn-standard:hover {
  background-color: var(--color-button-standard-hover);
  transition: 0.3s ease-in-out;
}

.gamegrid-container,
.gamestat-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.gamestat-container {
  justify-content: space-around;
  padding-top: 1rem;
  padding-bottom: 2rem;
}

#gamegrid {
  display: grid;
  width: 100%;
  align-items: center;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: auto;
  gap: 1rem;
  margin: 1rem;
  margin-top: 2rem;
}

.tile {
  width: 100%;
  aspect-ratio: 1/1;
  background-color: var(--color-tile-background);
  box-shadow: var(--shadow-default);
  border-radius: var(--rounded-large);
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}

.tile:hover {
  transform: scale(1.01);
  transition: 0.3s ease-in-out;
  background-color: var(--color-tile-hover);
}

.tile img {
  width: 60%;
  display: none;
}

.flipped img,
.matched img {
  display: block;
}

.flipped img {
  animation: showimage 0.2s;
}

@keyframes showimage {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

.modal-wrapper {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  --webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
}

.modal-content {
  z-index: 50;
  margin: 0;
  border: 1px solid #bbb;
  background-color: #eee;
  box-shadow: var(--shadow-default);
  border-radius: var(--rounded-standard);
  position: fixed;
  display: flex;
  flex-direction: column;
  text-align: center;
  padding: 2rem;
  width: 70%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.modal-logo {
  font-size: 4em;
  padding-bottom: 1rem;
}

.modal-title {
  font-family: var(--font-title);
  color: var(--color-title-dark);
  letter-spacing: 0.025em;
  text-align: center;
  font-size: 3em;
}

.modal-body {
  line-height: 1.5;
  padding: 0.5rem;
  font-size: 1em;
}

@media (min-width: 768px) {
  .main-container {
    width: 60%;
    margin: auto;
  }
  .title {
    font-size: 5em;
  }

  .modal-content {
    padding: 2rem;
    width: 40%;
  }

  .modal-body {
    padding: 2rem;
    font-size: 1.2em;
  }
}

@media (min-width: 1536px) {
  .main-container {
    width: 40%;
    margin: auto;
  }

  .modal-content {
    padding: 2rem;
    width: 20%;
  }

  .modal-body {
    padding: 3rem;
  }
}

@media (display-mode: standalone) {
  .main-container {
    padding: env(safe-area-inset-top) env(safe-area-inset-right)
      env(safe-area-inset-bottom) env(safe-area-inset-left) !important;
  }
}
